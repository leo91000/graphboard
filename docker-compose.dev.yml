services:
  api:
    container_name: graphboard_api
    restart: unless-stopped
    build:
      dockerfile: Dockerfile
      context: server
      args:
        BUILD: development
    command: cargo watch -x run
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      PORT: 3000
      PG_USER: graphboard
      PG_PASSWORD: graphboard
      PG_HOST: graphboard_db
      PG_PORT: 5432
      PG_DBNAME: graphboard
      PG_POOL_MAX_SIZE: 16
      RUST_BACKTRACE: 1
      RUST_LOG: info
    volumes:
      - ./server/src:/app/src
      - ./server/Cargo.toml:/app/Cargo.toml
    networks:
      - netweb
      - back

  web:
    container_name: graphboard_web
    restart: unless-stopped
    build:
      dockerfile: Dockerfile
      context: client
      args:
        BUILD: development
    command: pnpm run dev
    ports:
      - "3333:3333"
    environment:
      PORT: 3333
    volumes:
      - ./client:/app
    networks:
      - netweb

  proxy:
    image: nginx:1.21.4-alpine
    container_name: graphboard_proxy
    restart: unless-stopped
    depends_on:
      - api
      - web
    volumes:
      - ./docker/nginx/dev.conf:/etc/nginx/conf.d/default.conf
    networks:
      - netweb
    ports:
      - 1234:80


  db:
    container_name: graphboard_db
    image: postgres:14.1-alpine3.15
    environment:
      POSTGRES_USER: graphboard
      POSTGRES_PASSWORD: graphboard
      POSTGRES_DB: graphboard
    volumes:
      - ./data:/var/lib/postgresql/data/
      - ./docker/scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:cached
      - ./docker/migrations:/migrations:cached
    ports:
      - 5432:5432
    restart: unless-stopped
    networks:
      - back
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  netweb:
  back:
